// Parse link destination
//
'use strict';


const table = 'fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF';
const s = [11, 10, 3, 8, 4, 6];

function toBV(x) {
    x = (x ^ 177451812) + 8728348608;
    var r = 'BV1  4 1 7  '.split('');
    for (let i = 0; i < 6; i++) {
        r[s[i]] = table[Math.floor(x / Math.pow(58, i)) % 58];
    }
    return r.join('');
}

module.exports = function parseVideoId(str, pos, max) {
  var code, id,
      lines = 0,
      start = pos,
      result = {
        ok: false,
        pos: 0,
        lines: 0,
        str: ''
      };

  while (pos < max) {
    code = str.charCodeAt(pos);

    if (code === 0x20) { break; }

    // ascii control characters
    if (code < 0x20 || code === 0x7F) { break; }
    
    if (code === 0x5C /* \ */ && pos + 1 < max) {
      pos += 2;
      continue;
    }
    
    pos++;
  }
  
  if (start === pos) { return result; }
  if (level !== 0) { return result; }
  
  id = str.slice(start, pos);
  if (id.slice(0, 1) === 'av') {
    id = id.slice(2);
  }
  if (/^\d+$/.test(id)) {
    id = toBV(id);
  }
  result.str = id;
  result.lines = lines;
  result.pos = pos;
  result.ok = true;
  return result;
};